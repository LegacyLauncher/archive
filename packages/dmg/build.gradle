import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "base"
    id "de.undercouch.download"
}

def jreZipDownload = "https://cdn.azul.com/zulu/bin/zulu17.34.19-ca-fx-jre17.0.3-macosx_x64.zip"
def jreZipSha256 = "14177db1dd0c8ec8352e34de2e17d0352487489ba748da87dc62bbe9429d3460"
def jreZipEntry = "zulu17.34.19-ca-fx-jre17.0.3-macosx_x64/zulu-17.jre"

def bundleName = "TL ${full_brand}".toString()
def dmgDir = "$buildDir/dmg/$short_brand"
def contentsDir = "$dmgDir/${bundleName}.app/Contents"

def tokens = [
        'bundle_name': bundleName,
        'short_brand': short_brand,
        'full_brand': full_brand,
        'version': '0.0.0',
]
afterEvaluate {
    tokens['version'] = project(":launcher").version.toString()
}

task processBinaryContents(type: Copy) {
    from "$projectDir/contents/binary"
    into "$contentsDir"
}

task processTextualContents(type: Copy) {
    from "$projectDir/contents/textual"
    filter(ReplaceTokens, tokens: tokens)
    filteringCharset = 'UTF-8'
    into "$contentsDir"
}

task copyIconsToDmgDir(type: Copy) {
    from "$projectDir/TL.icns"
    into "$dmgDir"
}

task copyIconsToResourcesDir(type: Copy) {
    from "$projectDir/TL.icns"
    into "$contentsDir/Resources"
}

task copyIcons {
    dependsOn (
            copyIconsToDmgDir,
            copyIconsToResourcesDir,
    )
}

task copyBackground(type: Copy) {
    from "$projectDir/background/background.tiff"
    into "$dmgDir"
}

task copyScripts(type: Copy) {
    from "$projectDir/script"
    filter(ReplaceTokens, tokens: tokens)
    filteringCharset = 'UTF-8'
    into "$dmgDir"
}

task copyBootstrap(type: Copy) {
    dependsOn ":bootstrap:shadowJar"
    from tasks.getByPath(":bootstrap:shadowJar").outputs.files.singleFile
    into "$contentsDir/app"
    rename { "bootstrap.jar" }
}

task downloadMacOsJre(type: Download) {
    src jreZipDownload
    dest "$buildDir/jreZip/macOsJre.zip"
    overwrite false
    afterEvaluate {
        finalizedBy verifyMacOsJre
    }
}

task verifyMacOsJre(type: Verify) {
    src downloadMacOsJre.dest
    algorithm "SHA-256"
    checksum jreZipSha256
}

task unzipMacOsJre(type: Copy) {
    dependsOn downloadMacOsJre
    from zipTree(downloadMacOsJre.dest)
    into "$buildDir/jre"
}

task copyMacOsJre(type: Copy) {
    dependsOn unzipMacOsJre
    from "$buildDir/jre/$jreZipEntry"
    into "$contentsDir/runtime"
}

task prepareDmgBuild {
    dependsOn (
            processBinaryContents,
            processTextualContents,
            copyIcons,
            copyBackground,
            copyScripts,
            copyBootstrap,
            copyMacOsJre,
    )
}

assemble {
    afterEvaluate {
        if (System.getenv("DMG_ENABLED") == "true") {
            dependsOn("prepareDmgBuild")
        }
    }
    doLast {
        file("$buildDir/dmg/$short_brand").mkdirs()
    }
}
